# Default values for mychart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# replicaCount: 1

# image:
#   repository: yoonjeong/order
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: "1.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

# 쿠버네티스는 컨테이너 실행 시 기본으로 root 권한으로 실행
# root 권한에서의 컨테이너 실행을 방지하기 위해 파드 또는 컨테이너 단위로 실행시킬 PID를 지정
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


#############

# replicaCount 정의합니다.
replicaCount: 1

# 비즈니스 어플리케이션 value를 정의합니다.
application:
  name: "auth"
  springProfile: "dev"
  image:
    repository: egoomoy/auth-module
    pullPolicy: IfNotPresent
    tag: "latest"
  configMap:
    name: app-config-map
    data:
      "DB-SOURCE": "jdbc:mariadb://mariadb:3306/es?serverTimezone=Asia/Seoul&autoReconnect=true&validationQuery=select 1"
  secretKey:
    name: db-secret-key
    data: 
      "DB-USERNAME": cm9vdA==
      "DB-PASSWORD": ZWR1ZGF0YWJhc2UxMjM0
      # echo -n 'edudatabase1234' | base64
      # echo -n 'root' | base64

# 사이드카 프록시 value를 정의합니다.
proxy:
  enabled: false
  name: "sidecar"  
  springProfile: "dev"
  image:
    repository: egoomoy/sidecar-module
    pullPolicy: IfNotPresent
    tag: "latest"
  configMap: 
    name: proxy-config-map
    data:
      "PROXY.TARGET.HOST": "127.0.0.1"
      "PROXY.TARGET.PORT": "8080"
      "PROXY.TARGET.SCHEME": "http"
      "PROXY.RESPONSE.HEADERS.REMOVE": "x-frame-options" 
